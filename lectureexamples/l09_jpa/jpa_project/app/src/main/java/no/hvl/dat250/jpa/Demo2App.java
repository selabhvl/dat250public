/*
 * This source file was generated by the Gradle 'init' task
 */
package no.hvl.dat250.jpa;

import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import jakarta.persistence.PersistenceConfiguration;
import no.hvl.dat250.jpa.entities.User;
import org.hibernate.cfg.JdbcSettings;

import java.util.List;

public class Demo2App {


    public static void main(String[] args) {

        EntityManagerFactory emf = new PersistenceConfiguration("test2")
                .managedClass(User.class)
                // corresponds to 'jakarta.persistence.jdbc.url' in the persistence.xml
                .property(PersistenceConfiguration.JDBC_URL, "jdbc:h2:mem")
                // other properties accordingly
                .property(PersistenceConfiguration.JDBC_USER, "sa")
                .property(PersistenceConfiguration.JDBC_PASSWORD, "")
                .property(PersistenceConfiguration.SCHEMAGEN_DATABASE_ACTION, "drop-and-create") // Recreate the database fresh; DO NOT USE IN PRODUCTION
                // Hibernate specific properties are found in the JdbcSettings class
                .property(JdbcSettings.SHOW_SQL, true)
                .property(JdbcSettings.FORMAT_SQL, true)
                .property(JdbcSettings.HIGHLIGHT_SQL, true)
                .createEntityManagerFactory();

        // Creating some data first
        emf.runInTransaction(entityManager -> {
            User u1 = new User("alice");
            User u2 = new User("bob");
            entityManager.persist(u1);
            entityManager.persist(u2);
        });

        emf.runInTransaction(entityManager -> {
            // Using the JPA Querly Language here instead of SQL to fetch some data
            List resultList =
                    entityManager.createQuery("select u from User u", User.class).getResultList();
            for (Object o : resultList) {
                User u = (User) o;
                System.out.println(u);
            }
        });

    }
}
