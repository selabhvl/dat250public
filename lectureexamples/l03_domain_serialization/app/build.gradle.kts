/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    java
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:32.1.1-jre")

    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.2")

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}



tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register<JavaExec>("writeJsonStream") {
    group = "examples"
    dependsOn("classes")
    mainClass = "no.hvl.dat250.l04.examples.JSONStreamBasedWriting"
    classpath(sourceSets.main.get().runtimeClasspath)
}

tasks.register<JavaExec>("readJsonDOM") {
    group = "examples"
    dependsOn("classes")
    mainClass = "no.hvl.dat250.l04.examples.JSONDomBasedReading"
    classpath(sourceSets.main.get().runtimeClasspath)
}
